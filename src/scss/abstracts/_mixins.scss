// Media query manager
/*
  0 - 240px:        xxs
  240px - 360px:    xs
  360px - 480px:    sm
  480px - 768px:    md
  768px - 1024px:   lg
  1024px - 1440px:  xl
  1440px - 1920px:  xxl

$breakpoint argument choices:
- xxs watch
- xs phone
- sm phone
- md tablet
- lg tablet
- xl laptop
- xxl pc

ORDER to add Media Queries: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == xxs {
    @media only screen and (max-width: 15em) {
      // 240px
      @content;
    }
  }
  @if $breakpoint == xs {
    @media only screen and (max-width: 22.5em) {
      // 360px
      @content;
    }
  }
  @if $breakpoint == sm {
    @media only screen and (max-width: 30em) {
      // 480px
      @content;
    }
  }
  @if $breakpoint == md {
    @media only screen and (max-width: 48em) {
      // 768px
      @content;
    }
  }
  @if $breakpoint == lg {
    @media only screen and (max-width: 64em) {
      // 1024px
      @content;
    }
  }
  @if $breakpoint == xl {
    @media only screen and (max-width: 90em) {
      // 1440px
      @content;
    }
  }
  @if $breakpoint == xxl {
    @media only screen and (max-width: 120em) {
      // 1920px
      @content;
    }
  }
}

// Other mixins
@mixin flex($direction) {
  display: flex;
  @if $direction == column {
    flex-direction: column;
  }
  @content;
}

@mixin reset-base {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

@mixin reset-inherit {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
}

@mixin grid-columns-full {
  display: grid;
  grid-template-columns:
    [full-start] minmax(7rem, 1fr) [center-start]
    repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end]
    minmax(7rem, 1fr) [full-end];
}

@mixin hidden {
  opacity: 0;
  visibility: hidden;
}

@mixin fixCenter {
  position: fixed;
  inset: 50% 0 0 50%;
  transform: translate(-50%, -50%);
}
